SELECT 
    NULL AS IDS,
    'HeaderCol1' AS NM,
    'HeaderCol2' AS LNM,
    NULL AS TOTAL_COUNT
FROM DUAL
UNION ALL
SELECT IDS, NM, LNM, TOTAL_COUNT
FROM (
    SELECT IDS, NM, LNM, COUNT(*) OVER (PARTITION BY NM) AS TOTAL_COUNT
    FROM your_table
)
UNION ALL
SELECT 
    NULL AS IDS,
    'Footer, total count:' AS NM,
    TO_CHAR(COUNT(*)) AS LNM,
    NULL AS TOTAL_COUNT
FROM your_table
GROUP BY NM;


SELECT * FROM (
    SELECT 
        NULL AS IDS,
        'HeaderCol1' AS NM,
        'HeaderCol2' AS LNM,
        NULL AS TOTAL_COUNT,
        NM AS GROUP_KEY,
        0 AS RN
    FROM (
        SELECT DISTINCT NM FROM your_table
    )
    
    UNION ALL

    SELECT 
        IDS, NM, LNM, 
        COUNT(*) OVER (PARTITION BY NM) AS TOTAL_COUNT,
        NM AS GROUP_KEY,
        1 AS RN
    FROM your_table

    UNION ALL

    SELECT 
        NULL AS IDS,
        'Footer, total count:' AS NM,
        TO_CHAR(COUNT(*)) AS LNM,
        NULL AS TOTAL_COUNT,
        NM AS GROUP_KEY,
        2 AS RN
    FROM your_table
    GROUP BY NM
)
ORDER BY GROUP_KEY, RN, IDS NULLS LAST;




SELECT
    NULL AS IDS,
    'HeaderCol1' AS NM,
    'HeaderCol2' AS LNM,
    NULL AS TOTAL_COUNT,
    RN * 3 - 2 AS ORDERING
FROM (
    SELECT ROW_NUMBER() OVER (ORDER BY IDS) RN
    FROM your_table
)
UNION ALL
SELECT
    IDS, NM, LNM, TOTAL_COUNT,
    RN * 3 - 1 AS ORDERING
FROM (
    SELECT 
        IDS,
        NM,
        LNM,
        COUNT(*) OVER (PARTITION BY NM) AS TOTAL_COUNT,
        ROW_NUMBER() OVER (ORDER BY IDS) AS RN
    FROM your_table
)
UNION ALL
SELECT
    NULL AS IDS,
    'Footer, total count:' AS NM,
    TO_CHAR(TOTAL_COUNT) AS LNM,
    NULL AS TOTAL_COUNT,
    RN * 3 AS ORDERING
FROM (
    SELECT 
        NM,
        COUNT(*) OVER (PARTITION BY NM) AS TOTAL_COUNT,
        ROW_NUMBER() OVER (ORDER BY IDS) AS RN
    FROM your_table
)
ORDER BY ORDERING;
