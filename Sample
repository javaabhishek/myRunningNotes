SELECT 
    NULL AS IDS,
    'HeaderCol1' AS NM,
    'HeaderCol2' AS LNM,
    NULL AS TOTAL_COUNT
FROM DUAL
UNION ALL
SELECT IDS, NM, LNM, TOTAL_COUNT
FROM (
    SELECT IDS, NM, LNM, COUNT(*) OVER (PARTITION BY NM) AS TOTAL_COUNT
    FROM your_table
)
UNION ALL
SELECT 
    NULL AS IDS,
    'Footer, total count:' AS NM,
    TO_CHAR(COUNT(*)) AS LNM,
    NULL AS TOTAL_COUNT
FROM your_table
GROUP BY NM;


SELECT * FROM (
    SELECT 
        NULL AS IDS,
        'HeaderCol1' AS NM,
        'HeaderCol2' AS LNM,
        NULL AS TOTAL_COUNT,
        NM AS GROUP_KEY,
        0 AS RN
    FROM (
        SELECT DISTINCT NM FROM your_table
    )
    
    UNION ALL

    SELECT 
        IDS, NM, LNM, 
        COUNT(*) OVER (PARTITION BY NM) AS TOTAL_COUNT,
        NM AS GROUP_KEY,
        1 AS RN
    FROM your_table

    UNION ALL

    SELECT 
        NULL AS IDS,
        'Footer, total count:' AS NM,
        TO_CHAR(COUNT(*)) AS LNM,
        NULL AS TOTAL_COUNT,
        NM AS GROUP_KEY,
        2 AS RN
    FROM your_table
    GROUP BY NM
)
ORDER BY GROUP_KEY, RN, IDS NULLS LAST;




SELECT
    NULL AS IDS,
    'HeaderCol1' AS NM,
    'HeaderCol2' AS LNM,
    NULL AS TOTAL_COUNT,
    RN * 3 - 2 AS ORDERING
FROM (
    SELECT ROW_NUMBER() OVER (ORDER BY IDS) RN
    FROM your_table
)
UNION ALL
SELECT
    IDS, NM, LNM, TOTAL_COUNT,
    RN * 3 - 1 AS ORDERING
FROM (
    SELECT 
        IDS,
        NM,
        LNM,
        COUNT(*) OVER (PARTITION BY NM) AS TOTAL_COUNT,
        ROW_NUMBER() OVER (ORDER BY IDS) AS RN
    FROM your_table
)
UNION ALL
SELECT
    NULL AS IDS,
    'Footer, total count:' AS NM,
    TO_CHAR(TOTAL_COUNT) AS LNM,
    NULL AS TOTAL_COUNT,
    RN * 3 AS ORDERING
FROM (
    SELECT 
        NM,
        COUNT(*) OVER (PARTITION BY NM) AS TOTAL_COUNT,
        ROW_NUMBER() OVER (ORDER BY IDS) AS RN
    FROM your_table
)
ORDER BY ORDERING;




SELECT *
FROM (
    -- Header row per group
    SELECT 
        NULL AS IDS,
        'HeaderCol1' AS NM,
        'HeaderCol2' AS LNM,
        NULL AS TOTAL_COUNT,
        NM AS GROUP_KEY,
        0 AS RN
    FROM (
        SELECT DISTINCT NM FROM your_table
    )

    UNION ALL

    -- Actual rows per group with count
    SELECT 
        IDS,
        NM,
        LNM,
        COUNT(*) OVER (PARTITION BY NM) AS TOTAL_COUNT,
        NM AS GROUP_KEY,
        1 AS RN
    FROM your_table

    UNION ALL

    -- Footer row per group
    SELECT 
        NULL AS IDS,
        'Footer, total count:' AS NM,
        TO_CHAR(COUNT(*)) AS LNM,
        NULL AS TOTAL_COUNT,
        NM AS GROUP_KEY,
        2 AS RN
    FROM your_table
    GROUP BY NM
)
ORDER BY GROUP_KEY, RN, IDS NULLS LAST;


Yes, your intuition is right: you can centralize configuration like download URLs, but unfortunately, the frontend-maven-plugin does not natively support reading nodeDownloadRoot or npmDownloadRoot from Mavenâ€™s settings.xml (unlike repositories or server credentials).

However, you can work around this using Maven properties and profiles. Hereâ€™s a clean, industry-accepted way to keep those URLs out of pom.xml and in a more centralized place like settings.xml.

â¸»

âœ… Option: Use Maven Properties in settings.xml and Reference in pom.xml

ðŸ”¹ Step 1: Define Properties in settings.xml

In your ~/.m2/settings.xml (or corporate shared settings.xml), add:
<settings>
  <profiles>
    <profile>
      <id>custom-node-npm</id>
      <properties>
        <node.download.root>https://artifactory.company.com/node</node.download.root>
        <npm.download.root>https://artifactory.company.com/npm</npm.download.root>
      </properties>
    </profile>
  </profiles>

  <activeProfiles>
    <activeProfile>custom-node-npm</activeProfile>
  </activeProfiles>
</settings>

Step 2: Reference Properties in Your pom.xml

Update your frontend-maven-plugin like this:

<plugin>
  <groupId>com.github.eirslett</groupId>
  <artifactId>frontend-maven-plugin</artifactId>
  <version>1.14.1</version>
  <configuration>
    <nodeDownloadRoot>${node.download.root}</nodeDownloadRoot>
    <npmDownloadRoot>${npm.download.root}</npmDownloadRoot>
  </configuration>
  <executions>
    <execution>
      <id>install node and npm</id>
      <goals>
        <goal>install-node-and-npm</goal>
      </goals>
      <configuration>
        <nodeVersion>v18.18.2</nodeVersion>
        <npmVersion>9.8.1</npmVersion>
      </configuration>
    </execution>
  </executions>
</plugin>

